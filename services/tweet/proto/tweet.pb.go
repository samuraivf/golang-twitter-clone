// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: tweet.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTweetDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text           string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	UserId         uint64   `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Tags           []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	AuthorUsername string   `protobuf:"bytes,4,opt,name=authorUsername,proto3" json:"authorUsername,omitempty"`
}

func (x *CreateTweetDto) Reset() {
	*x = CreateTweetDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTweetDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTweetDto) ProtoMessage() {}

func (x *CreateTweetDto) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTweetDto.ProtoReflect.Descriptor instead.
func (*CreateTweetDto) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTweetDto) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateTweetDto) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CreateTweetDto) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateTweetDto) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

type UpdateTweetDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text           string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	TweetId        uint64   `protobuf:"varint,2,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
	Tags           []string `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
	AuthorUsername string   `protobuf:"bytes,4,opt,name=authorUsername,proto3" json:"authorUsername,omitempty"`
}

func (x *UpdateTweetDto) Reset() {
	*x = UpdateTweetDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTweetDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTweetDto) ProtoMessage() {}

func (x *UpdateTweetDto) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTweetDto.ProtoReflect.Descriptor instead.
func (*UpdateTweetDto) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{1}
}

func (x *UpdateTweetDto) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *UpdateTweetDto) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

func (x *UpdateTweetDto) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateTweetDto) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

type TweetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TweetId uint64 `protobuf:"varint,1,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
}

func (x *TweetId) Reset() {
	*x = TweetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TweetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetId) ProtoMessage() {}

func (x *TweetId) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetId.ProtoReflect.Descriptor instead.
func (*TweetId) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{2}
}

func (x *TweetId) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

type TweetData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	Text           string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Likes          []*UserId              `protobuf:"bytes,5,rep,name=likes,proto3" json:"likes,omitempty"`
	UserId         uint64                 `protobuf:"varint,6,opt,name=userId,proto3" json:"userId,omitempty"`
	Comments       []*CommentId           `protobuf:"bytes,7,rep,name=comments,proto3" json:"comments,omitempty"`
	MentionedUsers []*UserId              `protobuf:"bytes,8,rep,name=mentionedUsers,proto3" json:"mentionedUsers,omitempty"`
	Tags           []*TagId               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *TweetData) Reset() {
	*x = TweetData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TweetData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetData) ProtoMessage() {}

func (x *TweetData) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetData.ProtoReflect.Descriptor instead.
func (*TweetData) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{3}
}

func (x *TweetData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TweetData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TweetData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *TweetData) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TweetData) GetLikes() []*UserId {
	if x != nil {
		return x.Likes
	}
	return nil
}

func (x *TweetData) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *TweetData) GetComments() []*CommentId {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *TweetData) GetMentionedUsers() []*UserId {
	if x != nil {
		return x.MentionedUsers
	}
	return nil
}

func (x *TweetData) GetTags() []*TagId {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CommentId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId uint64 `protobuf:"varint,1,opt,name=commentId,proto3" json:"commentId,omitempty"`
	TweetId   uint64 `protobuf:"varint,2,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
}

func (x *CommentId) Reset() {
	*x = CommentId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentId) ProtoMessage() {}

func (x *CommentId) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentId.ProtoReflect.Descriptor instead.
func (*CommentId) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{4}
}

func (x *CommentId) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentId) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

type UserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TweetId uint64 `protobuf:"varint,1,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
	UserId  uint64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserId) Reset() {
	*x = UserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserId) ProtoMessage() {}

func (x *UserId) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserId.ProtoReflect.Descriptor instead.
func (*UserId) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{5}
}

func (x *UserId) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

func (x *UserId) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TagId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TweetId uint64 `protobuf:"varint,1,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
	TagId   uint64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
}

func (x *TagId) Reset() {
	*x = TagId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagId) ProtoMessage() {}

func (x *TagId) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagId.ProtoReflect.Descriptor instead.
func (*TagId) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{6}
}

func (x *TagId) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

func (x *TagId) GetTagId() uint64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

type UserIdParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId uint64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UserIdParam) Reset() {
	*x = UserIdParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIdParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIdParam) ProtoMessage() {}

func (x *UserIdParam) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIdParam.ProtoReflect.Descriptor instead.
func (*UserIdParam) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{7}
}

func (x *UserIdParam) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type TweetUserId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TweetId uint64 `protobuf:"varint,1,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
	UserId  uint64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *TweetUserId) Reset() {
	*x = TweetUserId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TweetUserId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TweetUserId) ProtoMessage() {}

func (x *TweetUserId) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TweetUserId.ProtoReflect.Descriptor instead.
func (*TweetUserId) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{8}
}

func (x *TweetUserId) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

func (x *TweetUserId) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type Tweets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tweets []*TweetData `protobuf:"bytes,1,rep,name=tweets,proto3" json:"tweets,omitempty"`
}

func (x *Tweets) Reset() {
	*x = Tweets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tweets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tweets) ProtoMessage() {}

func (x *Tweets) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tweets.ProtoReflect.Descriptor instead.
func (*Tweets) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{9}
}

func (x *Tweets) GetTweets() []*TweetData {
	if x != nil {
		return x.Tweets
	}
	return nil
}

type CommentTweetId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommentId uint64 `protobuf:"varint,1,opt,name=commentId,proto3" json:"commentId,omitempty"`
	TweetId   uint64 `protobuf:"varint,2,opt,name=tweetId,proto3" json:"tweetId,omitempty"`
}

func (x *CommentTweetId) Reset() {
	*x = CommentTweetId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tweet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentTweetId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentTweetId) ProtoMessage() {}

func (x *CommentTweetId) ProtoReflect() protoreflect.Message {
	mi := &file_tweet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentTweetId.ProtoReflect.Descriptor instead.
func (*CommentTweetId) Descriptor() ([]byte, []int) {
	return file_tweet_proto_rawDescGZIP(), []int{10}
}

func (x *CommentTweetId) GetCommentId() uint64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

func (x *CommentTweetId) GetTweetId() uint64 {
	if x != nil {
		return x.TweetId
	}
	return 0
}

var File_tweet_proto protoreflect.FileDescriptor

var file_tweet_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74,
	0x77, 0x65, 0x65, 0x74, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x78, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x44, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x7a, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x61, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x23, 0x0a, 0x07, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0xe7, 0x02,
	0x0a, 0x09, 0x54, 0x77, 0x65, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x52, 0x05, 0x6c, 0x69, 0x6b, 0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x35,
	0x0a, 0x0e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x52, 0x0e, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x49,
	0x64, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x43, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x06,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x05, 0x54, 0x61, 0x67, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49,
	0x64, 0x22, 0x25, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x3f, 0x0a, 0x0b, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x32, 0x0a, 0x06, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x06, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x74, 0x77, 0x65, 0x65, 0x74, 0x73, 0x22, 0x48, 0x0a,
	0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x32, 0xad, 0x04, 0x0a, 0x05, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x12, 0x34, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74,
	0x12, 0x15, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x77, 0x65, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x1a, 0x0e, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x0e, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x49, 0x64, 0x1a, 0x10, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e,
	0x54, 0x77, 0x65, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x74, 0x77, 0x65,
	0x65, 0x74, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x0d,
	0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x12, 0x2f, 0x0a,
	0x10, 0x47, 0x65, 0x74, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x42, 0x79, 0x54, 0x61, 0x67, 0x49,
	0x64, 0x12, 0x0c, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x61, 0x67, 0x49, 0x64, 0x1a,
	0x0d, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x73, 0x12, 0x34,
	0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x15, 0x2e,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x44, 0x74, 0x6f, 0x1a, 0x0e, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x37, 0x0a, 0x09, 0x4c,
	0x69, 0x6b, 0x65, 0x54, 0x77, 0x65, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74,
	0x2e, 0x54, 0x77, 0x65, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0b, 0x55, 0x6e, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x77,
	0x65, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x54, 0x77, 0x65, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3b, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x2e,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x77, 0x65,
	0x65, 0x74, 0x49, 0x64, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x39, 0x0a, 0x0d,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x2e,
	0x74, 0x77, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x03, 0x5a, 0x01, 0x2e, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tweet_proto_rawDescOnce sync.Once
	file_tweet_proto_rawDescData = file_tweet_proto_rawDesc
)

func file_tweet_proto_rawDescGZIP() []byte {
	file_tweet_proto_rawDescOnce.Do(func() {
		file_tweet_proto_rawDescData = protoimpl.X.CompressGZIP(file_tweet_proto_rawDescData)
	})
	return file_tweet_proto_rawDescData
}

var file_tweet_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_tweet_proto_goTypes = []interface{}{
	(*CreateTweetDto)(nil),        // 0: tweet.CreateTweetDto
	(*UpdateTweetDto)(nil),        // 1: tweet.UpdateTweetDto
	(*TweetId)(nil),               // 2: tweet.TweetId
	(*TweetData)(nil),             // 3: tweet.TweetData
	(*CommentId)(nil),             // 4: tweet.CommentId
	(*UserId)(nil),                // 5: tweet.UserId
	(*TagId)(nil),                 // 6: tweet.TagId
	(*UserIdParam)(nil),           // 7: tweet.UserIdParam
	(*TweetUserId)(nil),           // 8: tweet.TweetUserId
	(*Tweets)(nil),                // 9: tweet.Tweets
	(*CommentTweetId)(nil),        // 10: tweet.CommentTweetId
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 12: google.protobuf.Empty
}
var file_tweet_proto_depIdxs = []int32{
	11, // 0: tweet.TweetData.createdAt:type_name -> google.protobuf.Timestamp
	11, // 1: tweet.TweetData.updatedAt:type_name -> google.protobuf.Timestamp
	5,  // 2: tweet.TweetData.likes:type_name -> tweet.UserId
	4,  // 3: tweet.TweetData.comments:type_name -> tweet.CommentId
	5,  // 4: tweet.TweetData.mentionedUsers:type_name -> tweet.UserId
	6,  // 5: tweet.TweetData.tags:type_name -> tweet.TagId
	3,  // 6: tweet.Tweets.tweets:type_name -> tweet.TweetData
	0,  // 7: tweet.Tweet.CreateTweet:input_type -> tweet.CreateTweetDto
	2,  // 8: tweet.Tweet.GetTweetById:input_type -> tweet.TweetId
	7,  // 9: tweet.Tweet.GetUserTweets:input_type -> tweet.UserIdParam
	6,  // 10: tweet.Tweet.GetTweetsByTagId:input_type -> tweet.TagId
	1,  // 11: tweet.Tweet.UpdateTweet:input_type -> tweet.UpdateTweetDto
	2,  // 12: tweet.Tweet.DeleteTweet:input_type -> tweet.TweetId
	8,  // 13: tweet.Tweet.LikeTweet:input_type -> tweet.TweetUserId
	8,  // 14: tweet.Tweet.UnlikeTweet:input_type -> tweet.TweetUserId
	10, // 15: tweet.Tweet.AddComment:input_type -> tweet.CommentTweetId
	4,  // 16: tweet.Tweet.DeleteComment:input_type -> tweet.CommentId
	2,  // 17: tweet.Tweet.CreateTweet:output_type -> tweet.TweetId
	3,  // 18: tweet.Tweet.GetTweetById:output_type -> tweet.TweetData
	9,  // 19: tweet.Tweet.GetUserTweets:output_type -> tweet.Tweets
	9,  // 20: tweet.Tweet.GetTweetsByTagId:output_type -> tweet.Tweets
	2,  // 21: tweet.Tweet.UpdateTweet:output_type -> tweet.TweetId
	12, // 22: tweet.Tweet.DeleteTweet:output_type -> google.protobuf.Empty
	12, // 23: tweet.Tweet.LikeTweet:output_type -> google.protobuf.Empty
	12, // 24: tweet.Tweet.UnlikeTweet:output_type -> google.protobuf.Empty
	12, // 25: tweet.Tweet.AddComment:output_type -> google.protobuf.Empty
	12, // 26: tweet.Tweet.DeleteComment:output_type -> google.protobuf.Empty
	17, // [17:27] is the sub-list for method output_type
	7,  // [7:17] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_tweet_proto_init() }
func file_tweet_proto_init() {
	if File_tweet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tweet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTweetDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTweetDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TweetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TweetData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserIdParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TweetUserId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tweets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tweet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentTweetId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tweet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tweet_proto_goTypes,
		DependencyIndexes: file_tweet_proto_depIdxs,
		MessageInfos:      file_tweet_proto_msgTypes,
	}.Build()
	File_tweet_proto = out.File
	file_tweet_proto_rawDesc = nil
	file_tweet_proto_goTypes = nil
	file_tweet_proto_depIdxs = nil
}
