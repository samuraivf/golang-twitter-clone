basePath: /api/
definitions:
  dto.CreateTweetDto:
    properties:
      tags:
        items:
          type: string
        type: array
      text:
        maxLength: 10000
        minLength: 1
        type: string
      userId:
        type: integer
    required:
    - text
    - userId
    type: object
  dto.CreateUserDto:
    properties:
      email:
        type: string
      name:
        maxLength: 20
        minLength: 3
        type: string
      password:
        maxLength: 30
        minLength: 8
        type: string
      username:
        maxLength: 15
        minLength: 3
        type: string
    required:
    - email
    - name
    - password
    - username
    type: object
  dto.LoginDto:
    properties:
      password:
        maxLength: 30
        minLength: 8
        type: string
      username:
        maxLength: 15
        minLength: 3
        type: string
    required:
    - password
    - username
    type: object
  dto.UpdateTweetDto:
    properties:
      tags:
        items:
          type: string
        type: array
      text:
        maxLength: 10000
        minLength: 1
        type: string
      tweetId:
        type: integer
    required:
    - text
    - tweetId
    type: object
  handler.ErrorMessage:
    properties:
      message:
        type: string
    type: object
  models.Comment:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      likes:
        items:
          $ref: '#/definitions/models.User'
        type: array
      text:
        type: string
      tweetId:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
    required:
    - id
    type: object
  models.Message:
    properties:
      authorId:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      text:
        type: string
      tweetId:
        type: integer
      updatedAt:
        type: string
      userId:
        type: integer
    required:
    - id
    type: object
  models.Tag:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      string:
        type: string
      tweets:
        items:
          $ref: '#/definitions/models.Tweet'
        type: array
      updatedAt:
        type: string
    required:
    - id
    type: object
  models.Tweet:
    properties:
      comments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      createdAt:
        type: string
      id:
        type: integer
      likes:
        items:
          $ref: '#/definitions/models.User'
        type: array
      mentionedUsers:
        items:
          $ref: '#/definitions/models.User'
        type: array
      retweets:
        type: integer
      tags:
        items:
          $ref: '#/definitions/models.Tag'
        type: array
      text:
        type: string
      updatedAt:
        type: string
      userId:
        type: integer
    required:
    - id
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: integer
      image:
        items:
          type: integer
        type: array
      likedComments:
        items:
          $ref: '#/definitions/models.Comment'
        type: array
      likedTweets:
        items:
          $ref: '#/definitions/models.Tweet'
        type: array
      mentionedIn:
        items:
          $ref: '#/definitions/models.Tweet'
        type: array
      messages:
        items:
          $ref: '#/definitions/models.Message'
        type: array
      name:
        type: string
      subscribers:
        items:
          $ref: '#/definitions/models.User'
        type: array
      subscriptions:
        items:
          $ref: '#/definitions/models.User'
        type: array
      tweets:
        items:
          $ref: '#/definitions/models.Tweet'
        type: array
      updatedAt:
        type: string
      username:
        type: string
    required:
    - id
    type: object
host: localhost:7000
info:
  contact: {}
  description: Application with basic functionality of twitter
  title: Twitter Clone
  version: "1.0"
paths:
  /auth/logout:
    get:
      description: Logout
      operationId: logout
      parameters:
      - description: token
        in: header
        name: cookie
        required: true
        type: string
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      summary: Logout
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: Sign in
      operationId: sign-in
      parameters:
      - description: login data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: Create account
      operationId: sign-up
      parameters:
      - description: create user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      summary: SignUp
      tags:
      - auth
  /tweet/{id}:
    delete:
      description: Delete tweet by tweet id
      operationId: delete-tweet
      parameters:
      - description: tweet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: DeleteTweet
      tags:
      - tweet
    get:
      description: Get tweet by ID
      operationId: get-tweet-by-id
      parameters:
      - description: tweet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Tweet'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: GetTweetById
      tags:
      - tweet
  /tweet/create:
    post:
      consumes:
      - application/json
      description: Create tweet
      operationId: create-tweet
      parameters:
      - description: create tweet data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTweetDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      security:
      - ApiKeyAuth: []
      summary: CreateTweet
      tags:
      - tweet
  /tweet/like/{id}:
    get:
      description: Like tweet
      operationId: like-tweet
      parameters:
      - description: tweet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      security:
      - ApiKeyAuth: []
      summary: LikeTweet
      tags:
      - tweet
  /tweet/unlike/{id}:
    get:
      description: Unlike tweet
      operationId: unlike-tweet
      parameters:
      - description: tweet id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: boolean
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      security:
      - ApiKeyAuth: []
      summary: UnlikeTweet
      tags:
      - tweet
  /tweet/update:
    put:
      consumes:
      - application/json
      description: Update tweet
      operationId: update-tweet
      parameters:
      - description: update tweet data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateTweetDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            type: obkect
      security:
      - ApiKeyAuth: []
      summary: UpdateTweet
      tags:
      - tweet
  /tweet/user-tweets/{userId}:
    get:
      description: Get user tweets by userId
      operationId: get-user-tweets
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Tweet'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.ErrorMessage'
      security:
      - ApiKeyAuth: []
      summary: GetUserTweets
      tags:
      - tweet
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
